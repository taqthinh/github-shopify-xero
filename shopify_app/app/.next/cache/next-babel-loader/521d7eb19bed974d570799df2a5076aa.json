{"ast":null,"code":"var _jsxFileName = \"/home/thinh/Documents/odoo-13/customaddons/shopify_app/app/pages/index.js\";\nvar __jsx = React.createElement;\nimport { DataTable, DatePicker, Checkbox, Select, AppProvider, Button, Card, TextField, TextStyle, EmptyState, Form, FormLayout, Layout, Page } from '@shopify/polaris';\nimport React, { Component, useState, useCallback } from 'react';\nimport ReactDOM from \"react-dom\";\nimport '@shopify/polaris/dist/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\n\nfunction DatePickerExample() {\n  const {\n    0: {\n      month,\n      year\n    },\n    1: setDate\n  } = useState({\n    month: 1,\n    year: 2018\n  });\n  const {\n    0: selectedDates,\n    1: setSelectedDates\n  } = useState({\n    start: new Date('Wed Feb 07 2018 00:00:00 GMT-0500 (EST)'),\n    end: new Date('Mon Mar 12 2018 00:00:00 GMT-0500 (EST)')\n  });\n  const handleMonthChange = useCallback((month, year) => setDate({\n    month,\n    year\n  }), []);\n  return __jsx(DatePicker, {\n    month: month,\n    year: year,\n    onChange: setSelectedDates,\n    onMonthChange: handleMonthChange,\n    selected: selectedDates,\n    multiMonth: true,\n    allowRange: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction ExportForm() {\n  return __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(DatePickerExample, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Export Data\"));\n}\n\nfunction AutoSyncCheckbox(props) {\n  // const label =\n  const {\n    0: checked,\n    1: setChecked\n  } = useState(false);\n  const handleChange = useCallback(newChecked => setChecked(newChecked), []);\n  return __jsx(Checkbox, {\n    label: \"Auto Sync\",\n    checked: checked,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction AccountSelect(props) {\n  const {\n    0: selected,\n    1: setSelected\n  } = useState('200');\n  const handleSelectChange = useCallback(value => setSelected(value), []);\n  const options = [{\n    label: '200 - Sale',\n    value: '200'\n  }, {\n    label: '201 - VAT',\n    value: '201'\n  }, {\n    label: '901 - Bank',\n    value: '901'\n  }];\n  return __jsx(Select, {\n    label: props.label,\n    options: options,\n    onChange: handleSelectChange,\n    value: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction AccountSettingForm() {\n  return __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, __jsx(AccountSelect, {\n    label: \"Sales Account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), __jsx(AccountSelect, {\n    label: \"Shipping Account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), __jsx(AccountSelect, {\n    label: \"Payment Account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), __jsx(AutoSyncCheckbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Save Settings\"));\n}\n\nfunction DataTableExample() {\n  const rows = [['Emerald Silk Gown', '$875.00', 124689, 140], ['Mauve Cashmere Scarf', '$230.00', 124533, 83]];\n  return __jsx(Page, {\n    title: \"Sales by product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"History log of sync history, including automated jobs.\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \" Orders synced this month: 55 \"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Current Orders per plan: 100\")), __jsx(DataTable, {\n    columnContentTypes: ['datetime', 'datetime', 'text', 'text'],\n    headings: ['Excution Time', 'Finish Time', 'Status', 'Message'],\n    rows: rows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })));\n}\n\nclass NameForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: ''\n    };\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleNameChange(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert(\"Name: \" + this.state.name);\n    event.preventDefault();\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, __jsx(FormLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, __jsx(TextField, {\n      value: this.state.name,\n      onChange: this.handleNameChange,\n      label: \"Name\",\n      helpText: __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 31\n        }\n      }, \"Polaris\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }), __jsx(Button, {\n      submit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nfunction NameFormExample() {\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const handleSubmit = useCallback(_event => {\n    alert(\" Name: \" + name);\n  }, [name]);\n  const handleNameChange = useCallback(value => setName(value), []);\n  return __jsx(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, __jsx(FormLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    value: name,\n    onChange: handleNameChange,\n    label: \"Name\",\n    type: \"text\",\n    helpText: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, \"Polaris\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    submit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}\n\nclass Hello extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: 'Welcome to code 101'\n    };\n  }\n\n  render() {\n    return __jsx(AppProvider, {\n      i18n: translations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, __jsx(Page, {\n      title: \"Shopify Xero\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }\n    }, __jsx(Layout.AnnotatedSection, {\n      title: \"General Settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, __jsx(AccountSettingForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    })), __jsx(Layout.AnnotatedSection, {\n      title: \"Export To Xero\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, __jsx(ExportForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    })), __jsx(Layout.AnnotatedSection, {\n      title: \"History\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 23\n      }\n    }, __jsx(DataTableExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    })), __jsx(Layout.AnnotatedSection, {\n      title: \"Plans\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 23\n      }\n    }, __jsx(NameFormExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    })), __jsx(Layout.AnnotatedSection, {\n      title: \"Disconnect From Xero\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 23\n      }\n    }, __jsx(NameFormExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }\n    })))));\n  }\n\n}\n\nconst Index = () => __jsx(Hello, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }\n});\n\nexport default Hello; // const wrapper = document.getElementById(\"container12\");\n// wrapper ? ReactDOM.render(<Hello />, wrapper) : false;","map":{"version":3,"sources":["/home/thinh/Documents/odoo-13/customaddons/shopify_app/app/pages/index.js"],"names":["DataTable","DatePicker","Checkbox","Select","AppProvider","Button","Card","TextField","TextStyle","EmptyState","Form","FormLayout","Layout","Page","React","Component","useState","useCallback","ReactDOM","translations","DatePickerExample","month","year","setDate","selectedDates","setSelectedDates","start","Date","end","handleMonthChange","ExportForm","AutoSyncCheckbox","props","checked","setChecked","handleChange","newChecked","AccountSelect","selected","setSelected","handleSelectChange","value","options","label","AccountSettingForm","DataTableExample","rows","NameForm","constructor","state","name","handleNameChange","bind","handleSubmit","event","setState","target","alert","preventDefault","render","NameFormExample","setName","_event","Hello","message","Index"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,UAAnB,EAA+BC,QAA/B,EAAyCC,MAAzC,EAAiDC,WAAjD,EAA8DC,MAA9D,EAAsEC,IAAtE,EAA2EC,SAA3E,EAAsFC,SAAtF,EAAiGC,UAAjG,EAA6GC,IAA7G,EAAmHC,UAAnH,EAA+HC,MAA/H,EAAuIC,IAAvI,QAAmJ,kBAAnJ;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,WAApC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,kCAAP;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AAEA,SAASC,iBAAT,GAA6B;AAC3B,QAAM;AAAA,OAAC;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAD;AAAA,OAAgBC;AAAhB,MAA2BP,QAAQ,CAAC;AAACK,IAAAA,KAAK,EAAE,CAAR;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAAD,CAAzC;AACA,QAAM;AAAA,OAACE,aAAD;AAAA,OAAgBC;AAAhB,MAAoCT,QAAQ,CAAC;AACjDU,IAAAA,KAAK,EAAE,IAAIC,IAAJ,CAAS,yCAAT,CAD0C;AAEjDC,IAAAA,GAAG,EAAE,IAAID,IAAJ,CAAS,yCAAT;AAF4C,GAAD,CAAlD;AAIA,QAAME,iBAAiB,GAAGZ,WAAW,CACnC,CAACI,KAAD,EAAQC,IAAR,KAAiBC,OAAO,CAAC;AAACF,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,CADW,EAEnC,EAFmC,CAArC;AAIA,SACE,MAAC,UAAD;AACE,IAAA,KAAK,EAAED,KADT;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,QAAQ,EAAEG,gBAHZ;AAIE,IAAA,aAAa,EAAEI,iBAJjB;AAKE,IAAA,QAAQ,EAAEL,aALZ;AAME,IAAA,UAAU,MANZ;AAOE,IAAA,UAAU,MAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWD;;AAED,SAASM,UAAT,GAAqB;AACjB,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,CADJ;AAOH;;AAED,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC7B;AACF,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMmB,YAAY,GAAGlB,WAAW,CAAEmB,UAAD,IAAgBF,UAAU,CAACE,UAAD,CAA3B,EAAyC,EAAzC,CAAhC;AAEA,SACE,MAAC,QAAD;AACE,IAAA,KAAK,EAAE,WADT;AAEE,IAAA,OAAO,EAAEH,OAFX;AAGE,IAAA,QAAQ,EAAEE,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD;;AAED,SAASE,aAAT,CAAuBL,KAAvB,EAA8B;AAC5B,QAAM;AAAA,OAACM,QAAD;AAAA,OAAWC;AAAX,MAA0BvB,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMwB,kBAAkB,GAAGvB,WAAW,CAAEwB,KAAD,IAAWF,WAAW,CAACE,KAAD,CAAvB,EAAgC,EAAhC,CAAtC;AAEA,QAAMC,OAAO,GAAG,CACd;AAACC,IAAAA,KAAK,EAAE,YAAR;AAAsBF,IAAAA,KAAK,EAAE;AAA7B,GADc,EAEd;AAACE,IAAAA,KAAK,EAAE,WAAR;AAAqBF,IAAAA,KAAK,EAAE;AAA5B,GAFc,EAGd;AAACE,IAAAA,KAAK,EAAE,YAAR;AAAsBF,IAAAA,KAAK,EAAE;AAA7B,GAHc,CAAhB;AAMA,SACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAGT,KAAK,CAACW,KADhB;AAEE,IAAA,OAAO,EAAED,OAFX;AAGE,IAAA,QAAQ,EAAEF,kBAHZ;AAIE,IAAA,KAAK,EAAEF,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD;;AAED,SAASM,kBAAT,GAA6B;AACzB,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,KAAK,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,aAAD;AAAe,IAAA,KAAK,EAAC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,aAAD;AAAe,IAAA,KAAK,EAAC,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI,MAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANJ,CADJ;AAUH;;AAED,SAASC,gBAAT,GAA4B;AAC1B,QAAMC,IAAI,GAAG,CACX,CAAC,mBAAD,EAAsB,SAAtB,EAAiC,MAAjC,EAAyC,GAAzC,CADW,EAEX,CAAC,sBAAD,EAAyB,SAAzB,EAAoC,MAApC,EAA4C,EAA5C,CAFW,CAAb;AAIA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAHA,CADF,EAME,MAAC,SAAD;AACE,IAAA,kBAAkB,EAAE,CAClB,UADkB,EAElB,UAFkB,EAGlB,MAHkB,EAIlB,MAJkB,CADtB;AAOE,IAAA,QAAQ,EAAE,CACR,eADQ,EAER,aAFQ,EAGR,QAHQ,EAIR,SAJQ,CAPZ;AAaE,IAAA,IAAI,EAAEA,IAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADF;AA0BD;;AAED,MAAMC,QAAN,SAAuBhC,SAAvB,CAAgC;AAE5BiC,EAAAA,WAAW,CAAChB,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKiB,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAb;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,gBAAgB,CAACG,KAAD,EAAO;AACnB,SAAKC,QAAL,CAAc;AAACL,MAAAA,IAAI,EAAEI,KAAK,CAACE,MAAN,CAAaf;AAApB,KAAd;AACH;;AAEDY,EAAAA,YAAY,CAACC,KAAD,EAAO;AACfG,IAAAA,KAAK,CAAC,WAAW,KAAKR,KAAL,CAAWC,IAAvB,CAAL;AACAI,IAAAA,KAAK,CAACI,cAAN;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,WACI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKN,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AACA,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,IADlB;AAEA,MAAA,QAAQ,EAAE,KAAKC,gBAFf;AAGA,MAAA,KAAK,EAAC,MAHN;AAIA,MAAA,QAAQ,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOI,MAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,CADJ,CADJ;AAaH;;AAhC2B;;AAmChC,SAASS,eAAT,GAA0B;AACtB,QAAM;AAAA,OAACV,IAAD;AAAA,OAAOW;AAAP,MAAkB7C,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMqC,YAAY,GAAGpC,WAAW,CAAE6C,MAAD,IAAY;AAC7CL,IAAAA,KAAK,CAAC,YAAWP,IAAZ,CAAL;AACC,GAF+B,EAE7B,CAACA,IAAD,CAF6B,CAAhC;AAIA,QAAMC,gBAAgB,GAAGlC,WAAW,CAAEwB,KAAD,IAAWoB,OAAO,CAACpB,KAAD,CAAnB,EAA4B,EAA5B,CAApC;AAEA,SACA,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEY,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAEH,IADT;AAEE,IAAA,QAAQ,EAAEC,gBAFZ;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,QAAQ,EACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaE,MAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,CADF,CADA;AAoBH;;AAID,MAAMY,KAAN,SAAoBhD,SAApB,CAA8B;AAE1BiC,EAAAA,WAAW,CAAChB,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKiB,KAAL,GAAa;AACTe,MAAAA,OAAO,EAAC;AADC,KAAb;AAGH;;AAEDL,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,WAAD;AAAa,MAAA,IAAI,EAAExC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD,CAAQ,gBAAR;AACE,MAAA,KAAK,EAAC,kBADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADF,EAKE,MAAC,MAAD,CAAQ,gBAAR;AACE,MAAA,KAAK,EAAC,gBADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CALF,EASI,MAAC,MAAD,CAAQ,gBAAR;AACA,MAAA,KAAK,EAAC,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CATJ,EAaI,MAAC,MAAD,CAAQ,gBAAR;AACA,MAAA,KAAK,EAAC,OADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAbJ,EAiBI,MAAC,MAAD,CAAQ,gBAAR;AACA,MAAA,KAAK,EAAC,sBADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAjBJ,CADF,CADJ,CADJ;AA4BH;;AAtCyB;;AA0C9B,MAAM8C,KAAK,GAAG,MACV,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ;;AAIA,eAAeF,KAAf,C,CAEA;AACA","sourcesContent":["import {DataTable, DatePicker, Checkbox ,Select, AppProvider, Button, Card,TextField, TextStyle, EmptyState, Form, FormLayout, Layout, Page } from '@shopify/polaris';\nimport React, {Component, useState, useCallback} from 'react';\nimport ReactDOM from \"react-dom\";\nimport '@shopify/polaris/dist/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\n\nfunction DatePickerExample() {\n  const [{month, year}, setDate] = useState({month: 1, year: 2018});\n  const [selectedDates, setSelectedDates] = useState({\n    start: new Date('Wed Feb 07 2018 00:00:00 GMT-0500 (EST)'),\n    end: new Date('Mon Mar 12 2018 00:00:00 GMT-0500 (EST)'),\n  });\n  const handleMonthChange = useCallback(\n    (month, year) => setDate({month, year}),\n    [],\n  );\n  return (\n    <DatePicker\n      month={month}\n      year={year}\n      onChange={setSelectedDates}\n      onMonthChange={handleMonthChange}\n      selected={selectedDates}\n      multiMonth\n      allowRange\n    />\n  );\n}\n\nfunction ExportForm(){\n    return(\n        <Form>\n            <DatePickerExample />\n            <br />\n            <Button primary>Export Data</Button>\n        </Form>\n    )\n}\n\nfunction AutoSyncCheckbox(props) {\n    // const label =\n  const [checked, setChecked] = useState(false);\n  const handleChange = useCallback((newChecked) => setChecked(newChecked), []);\n\n  return (\n    <Checkbox\n      label= \"Auto Sync\"\n      checked={checked}\n      onChange={handleChange}\n    />\n  );\n}\n\nfunction AccountSelect(props) {\n  const [selected, setSelected] = useState('200');\n\n  const handleSelectChange = useCallback((value) => setSelected(value), []);\n\n  const options = [\n    {label: '200 - Sale', value: '200'},\n    {label: '201 - VAT', value: '201'},\n    {label: '901 - Bank', value: '901'},\n  ];\n\n  return (\n    <Select\n      label= {props.label}\n      options={options}\n      onChange={handleSelectChange}\n      value={selected}\n    />\n  );\n}\n\nfunction AccountSettingForm(){\n    return (\n        <Form>\n            <AccountSelect label=\"Sales Account\"/>\n            <AccountSelect label=\"Shipping Account\"/>\n            <AccountSelect label=\"Payment Account\"/>\n            <AutoSyncCheckbox />\n            <br />\n            <Button primary>Save Settings</Button>\n        </Form>\n    )\n}\n\nfunction DataTableExample() {\n  const rows = [\n    ['Emerald Silk Gown', '$875.00', 124689, 140],\n    ['Mauve Cashmere Scarf', '$230.00', 124533, 83],\n  ];\n  return (\n    <Page title=\"Sales by product\">\n      <Card>\n        <Card.Section>\n        <p>History log of sync history, including automated jobs.</p>\n        <p> Orders synced this month: 55 </p>\n        <p>Current Orders per plan: 100</p>\n        </Card.Section>\n        <DataTable\n          columnContentTypes={[\n            'datetime',\n            'datetime',\n            'text',\n            'text',\n          ]}\n          headings={[\n            'Excution Time',\n            'Finish Time',\n            'Status',\n            'Message',\n          ]}\n          rows={rows}\n        />\n      </Card>\n    </Page>\n  );\n}\n\nclass NameForm extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {name: ''};\n        this.handleNameChange = this.handleNameChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleNameChange(event){\n        this.setState({name: event.target.value});\n    }\n\n    handleSubmit(event){\n        alert(\"Name: \" + this.state.name)\n        event.preventDefault();\n    }\n\n    render(){\n        return(\n            <Form onSubmit={this.handleSubmit}>\n                <FormLayout>\n                    <TextField\n                    value={this.state.name}\n                    onChange={this.handleNameChange}\n                    label=\"Name\"\n                    helpText={<span>Polaris</span>}\n                    />\n                    <Button submit>Submit</Button>\n                </FormLayout>\n            </Form>\n        )\n    }\n}\n\nfunction NameFormExample(){\n    const [name, setName] = useState('');\n\n    const handleSubmit = useCallback((_event) => {\n    alert(\" Name: \"+ name)\n    }, [name]);\n\n    const handleNameChange = useCallback((value) => setName(value), []);\n\n    return (\n    <Form onSubmit={handleSubmit}>\n      <FormLayout>\n        <TextField\n          value={name}\n          onChange={handleNameChange}\n          label=\"Name\"\n          type=\"text\"\n          helpText={\n            <span>\n              Polaris\n            </span>\n          }\n        />\n\n        <Button submit>Submit</Button>\n      </FormLayout>\n    </Form>\n  );\n\n}\n\n\n\nclass Hello extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            message:'Welcome to code 101'\n        };\n    }\n\n    render() {\n        return (\n            <AppProvider i18n={translations}>\n                <Page title=\"Shopify Xero\">\n                  <Layout>\n                    <Layout.AnnotatedSection\n                      title=\"General Settings\">\n                        <AccountSettingForm />\n                    </Layout.AnnotatedSection>\n                    <Layout.AnnotatedSection\n                      title=\"Export To Xero\">\n                        <ExportForm />\n                    </Layout.AnnotatedSection>\n                      <Layout.AnnotatedSection\n                      title=\"History\">\n                        <DataTableExample />\n                    </Layout.AnnotatedSection>\n                      <Layout.AnnotatedSection\n                      title=\"Plans\">\n                        <NameFormExample />\n                    </Layout.AnnotatedSection>\n                      <Layout.AnnotatedSection\n                      title=\"Disconnect From Xero\">\n                        <NameFormExample />\n                    </Layout.AnnotatedSection>\n                  </Layout>\n                </Page>\n            </AppProvider>\n        )\n    }\n\n}\n\nconst Index = () => (\n    <Hello />\n);\n\nexport default Hello;\n\n// const wrapper = document.getElementById(\"container12\");\n// wrapper ? ReactDOM.render(<Hello />, wrapper) : false;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}