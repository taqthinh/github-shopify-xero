{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/thinh/Documents/odoo-13/customaddons/shopify_app/app/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Frame, Toast, DataTable, DatePicker, Checkbox, Select, AppProvider, Card, TextField, Button, TextStyle, EmptyState, Form, FormLayout, Layout, Page } from '@shopify/polaris';\nimport React, { Component, useState, useCallback } from 'react';\nimport ReactDOM from \"react-dom\";\nimport '@shopify/polaris/dist/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nvar AppConfig = window.config;\nconsole.log(\"window.config.shopify_store.sale_account: \" + window.config.shopify_store.sale_account);\n\nvar AccountSettingForm = /*#__PURE__*/function (_Component) {\n  _inherits(AccountSettingForm, _Component);\n\n  var _super = _createSuper(AccountSettingForm);\n\n  function AccountSettingForm(props) {\n    var _this;\n\n    _classCallCheck(this, AccountSettingForm);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      current_sale_account: AppConfig.shopify_store.sale_account,\n      current_shipping_account: AppConfig.shopify_store.shipping_account,\n      current_payment_account: AppConfig.shopify_store.payment_account,\n      current_auto_sync: AppConfig.shopify_store.auto_sync == 1 ? true : false,\n      sale_account_options: AppConfig.sale_accounts.map(function (account) {\n        return {\n          label: account.name,\n          value: account.code\n        };\n      }),\n      shipping_account_options: AppConfig.shipping_accounts.map(function (account) {\n        return {\n          label: account.name,\n          value: account.code\n        };\n      }),\n      payment_account_options: AppConfig.payment_accounts.map(function (account) {\n        return {\n          label: account.name,\n          value: account.code\n        };\n      })\n    };\n    _this.handleSaleAccountSelectChange = _this.handleSaleAccountSelectChange.bind(_assertThisInitialized(_this));\n    _this.handleShippingAccountSelectChange = _this.handleShippingAccountSelectChange.bind(_assertThisInitialized(_this));\n    _this.handlePaymentAccountSelectChange = _this.handlePaymentAccountSelectChange.bind(_assertThisInitialized(_this));\n    _this.handleAutoSyncChange = _this.handleAutoSyncChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AccountSettingForm, [{\n    key: \"handleSaleAccountSelectChange\",\n    value: function handleSaleAccountSelectChange(value) {\n      this.setState({\n        current_sale_account: value\n      });\n    }\n  }, {\n    key: \"handleShippingAccountSelectChange\",\n    value: function handleShippingAccountSelectChange(value) {\n      this.setState({\n        current_shipping_account: value\n      });\n    }\n  }, {\n    key: \"handlePaymentAccountSelectChange\",\n    value: function handlePaymentAccountSelectChange(value) {\n      this.setState({\n        current_payment_account: value\n      });\n    }\n  }, {\n    key: \"handleAutoSyncChange\",\n    value: function handleAutoSyncChange(value) {\n      this.setState({\n        current_auto_sync: value\n      });\n    }\n  }, {\n    key: \"SaveSettingUrl\",\n    value: function SaveSettingUrl() {\n      var current_sale_account = this.state.current_sale_account;\n      var current_shipping_account = this.state.current_shipping_account;\n      var current_payment_account = this.state.current_payment_account;\n      var current_auto_sync = '';\n\n      if (this.state.current_auto_sync == true) {\n        current_auto_sync = 'True';\n      }\n\n      var url = '/save_settings?sale_account=' + current_sale_account + '&shipping_account=' + current_shipping_account + '&payment_account=' + current_payment_account + '&auto_sync=' + current_auto_sync;\n      console.log(\"settings: \" + url);\n      return url;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, __jsx(FormLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, __jsx(Select, {\n        name: \"sale_account\",\n        label: \"Sales Account\",\n        options: this.state.sale_account_options,\n        onChange: this.handleSaleAccountSelectChange,\n        value: this.state.current_sale_account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }), __jsx(Select, {\n        name: \"shipping_account\",\n        label: \"Shipping Account\",\n        options: this.state.shipping_account_options,\n        onChange: this.handleShippingAccountSelectChange,\n        value: this.state.current_shipping_account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }), __jsx(Select, {\n        name: \"payment_account\",\n        label: \"Payment Account (Account with \\\"Enable payments to this account\\\" enabled):\",\n        options: this.state.payment_account_options,\n        onChange: this.handlePaymentAccountSelectChange,\n        value: this.state.current_payment_account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }), __jsx(Checkbox, {\n        name: \"auto_sync\",\n        label: \"Automatically Sync (at midnight everyday)\",\n        checked: this.state.current_auto_sync,\n        onChange: this.handleAutoSyncChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }), __jsx(Button, {\n        onClick: function onClick(event) {\n          return location.href = _this2.SaveSettingUrl();\n        },\n        primary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, \"Save Settings\")));\n    }\n  }]);\n\n  return AccountSettingForm;\n}(Component);\n\nvar ExportForm = /*#__PURE__*/function (_Component2) {\n  _inherits(ExportForm, _Component2);\n\n  var _super2 = _createSuper(ExportForm);\n\n  function ExportForm(props) {\n    var _this3;\n\n    _classCallCheck(this, ExportForm);\n\n    _this3 = _super2.call(this, props);\n    _this3.state = {\n      date: {\n        month: new Date().getMonth(),\n        year: new Date().getFullYear()\n      },\n      selectedDate: {\n        start: new Date(),\n        end: new Date()\n      }\n    };\n    _this3.handleSelectedDates = _this3.handleSelectedDates.bind(_assertThisInitialized(_this3));\n    _this3.handleMonthChange = _this3.handleMonthChange.bind(_assertThisInitialized(_this3));\n    return _this3;\n  }\n\n  _createClass(ExportForm, [{\n    key: \"handleSelectedDates\",\n    value: function handleSelectedDates(value) {\n      this.setState({\n        selectedDate: value\n      });\n    }\n  }, {\n    key: \"handleMonthChange\",\n    value: function handleMonthChange(value) {\n      this.setState({\n        date: value\n      });\n    }\n  }, {\n    key: \"SyncToXeroUrl\",\n    value: function SyncToXeroUrl() {\n      var from_date = new Date(this.state.selectedDate.start);\n      var to_date = new Date(this.state.selectedDate.end);\n      from_date = $.datepicker.formatDate('mm/dd/yy', from_date);\n      to_date = $.datepicker.formatDate('mm/dd/yy', to_date);\n      var url = '/sync_to_xero?from_date=' + from_date + '&to_date=' + to_date;\n      return url;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return __jsx(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, __jsx(DatePicker, {\n        month: this.state.date.month,\n        year: this.state.date.year,\n        onChange: this.handleSelectedDates,\n        onMonthChange: this.handleMonthChange,\n        selected: this.state.selectedDate,\n        multiMonth: true,\n        allowRange: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }), __jsx(Button, {\n        onClick: function onClick(event) {\n          return location.href = _this4.SyncToXeroUrl();\n        },\n        primary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, \"Export Data\"));\n    }\n  }]);\n\n  return ExportForm;\n}(Component);\n\nvar HistoryTable = /*#__PURE__*/function (_Component3) {\n  _inherits(HistoryTable, _Component3);\n\n  var _super3 = _createSuper(HistoryTable);\n\n  function HistoryTable(props) {\n    var _this5;\n\n    _classCallCheck(this, HistoryTable);\n\n    _this5 = _super3.call(this, props);\n    _this5.state = {\n      logs: AppConfig.logs,\n      orders_synced: AppConfig.shopify_store.orders_synced,\n      store_plan_order_number: AppConfig.shopify_store.store_plan_order_number\n    };\n    return _this5;\n  }\n\n  _createClass(HistoryTable, [{\n    key: \"showPlanOrderNumber\",\n    value: function showPlanOrderNumber() {\n      if (this.state.store_plan_order_number > 0) {\n        return this.state.store_plan_order_number;\n      } else {\n        return 'Unlimited';\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Page, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }, __jsx(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }\n      }, __jsx(Card.Section, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 19\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 23\n        }\n      }, \"History log of sync history, including automated jobs.\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 23\n        }\n      }, \"Orders synced this month: \", this.state.orders_synced), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 23\n        }\n      }, \"Current Orders per plan: \", this.showPlanOrderNumber())), __jsx(DataTable, {\n        columnContentTypes: ['datetime', 'datetime', 'text', 'text'],\n        headings: ['Excution Time', 'Finish Time', 'Status', 'Message'],\n        rows: this.state.logs,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 19\n        }\n      })));\n    }\n  }]);\n\n  return HistoryTable;\n}(Component);\n\nvar PlanForm = /*#__PURE__*/function (_Component4) {\n  _inherits(PlanForm, _Component4);\n\n  var _super4 = _createSuper(PlanForm);\n\n  function PlanForm(props) {\n    var _this6;\n\n    _classCallCheck(this, PlanForm);\n\n    _this6 = _super4.call(this, props);\n    _this6.state = {\n      plans: AppConfig.plans,\n      current_plan_id: AppConfig.shopify_store.store_plan_id,\n      shop_url: AppConfig.shop_url\n    };\n    return _this6;\n  }\n\n  _createClass(PlanForm, [{\n    key: \"showPlanName\",\n    value: function showPlanName(current_plan_id, plan_id, plan_name) {\n      if (current_plan_id == plan_id) {\n        return plan_name + \"(Current Plan)\";\n      } else {\n        return plan_name;\n      }\n    }\n  }, {\n    key: \"showPlanCost\",\n    value: function showPlanCost(cost) {\n      if (cost > 0) {\n        return __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 20\n          }\n        }, __jsx(\"i\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 23\n          }\n        }, \"$\", cost, \"/month\"));\n      } else {\n        return __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 20\n          }\n        }, __jsx(\"i\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 23\n          }\n        }, \"Free\"));\n      }\n    }\n  }, {\n    key: \"showPlanDescription\",\n    value: function showPlanDescription(plan) {\n      if (plan.plan_name == \"Essential\") {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }\n        }, __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 21\n          }\n        }, \"Sync Customers, Products, Orders to Xero\"), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 21\n          }\n        }, \"Manually Sync in date range\"), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 21\n          }\n        }, \"Automatic Updates every \", plan.plan_interval_number, \" hours\"), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 21\n          }\n        }, \"Account Mapping\"), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 21\n          }\n        }, \"Synchronization History\"), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 21\n          }\n        }, plan.plan_order_number, \" Orders/month\"));\n      } else if (plan.plan_name == \"Standard\") {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }\n        }, __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 21\n          }\n        }, \"All Essential Features\"), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }\n        }, \"Automatic Updates every \", plan.plan_interval_number, \" hours\"), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 21\n          }\n        }, \"Sync Gift Cards, Refunds to Xero\"), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 21\n          }\n        }, plan.plan_order_number, \" Orders/month\"));\n      } else if (plan.plan_name == \"Professional\") {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }\n        }, __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 21\n          }\n        }, \"All Standard Features\"), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 21\n          }\n        }, \"Automatic Updates every \", plan.plan_interval_number, \" hours\"), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 21\n          }\n        }, \"Sync Gift Cards, Refunds to Xero\"), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 21\n          }\n        }, \"Unlimited Orders per month\"));\n      }\n    }\n  }, {\n    key: \"showSignUpPlanButton\",\n    value: function showSignUpPlanButton(plan, current_plan_id) {\n      var buttunId = \"signup\" + plan.plan_id;\n      var url = '/sign_up/' + plan.plan_id + '?shop_url=' + this.state.shop_url;\n\n      if (plan.plan_cost == 0 || current_plan_id == plan.plan_id) {\n        return null;\n      } else {\n        return __jsx(\"div\", {\n          style: {\n            textAlign: 'center',\n            marginTop: '10px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }\n        }, __jsx(Button, {\n          id: buttunId,\n          onClick: function onClick(event) {\n            return window.top.location.href = url;\n          },\n          primary: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 21\n          }\n        }, \"Sign Up\"));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }\n      }, this.state.plans.map(function (plan) {\n        return __jsx(Layout.Section, {\n          oneThird: true,\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 21\n          }\n        }, __jsx(Card, {\n          sectioned: true,\n          title: _this7.showPlanName(_this7.state.current_plan_id, plan.plan_id, plan.plan_name),\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }\n        }, _this7.showPlanCost(plan.plan_cost), __jsx(\"br\", {\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }\n        }), _this7.showPlanDescription(plan), _this7.showSignUpPlanButton(plan, _this7.state.current_plan_id)));\n      }));\n    }\n  }]);\n\n  return PlanForm;\n}(Component);\n\nvar DisconnectForm = /*#__PURE__*/function (_Component5) {\n  _inherits(DisconnectForm, _Component5);\n\n  var _super5 = _createSuper(DisconnectForm);\n\n  function DisconnectForm() {\n    _classCallCheck(this, DisconnectForm);\n\n    return _super5.apply(this, arguments);\n  }\n\n  _createClass(DisconnectForm, [{\n    key: \"render\",\n    value: function render() {\n      var OrganizationName = AppConfig.organisation_name;\n      return __jsx(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }\n      }, __jsx(Card.Section, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 17\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }\n      }, \"Organization Name: \", __jsx(TextStyle, {\n        variation: \"strong\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 43\n        }\n      }, OrganizationName)), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }\n      }, \"Status:\", __jsx(TextStyle, {\n        variation: \"positive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }\n      }, \"Connected\")), __jsx(Button, {\n        onClick: function onClick(event) {\n          return location.href = '/disconnect';\n        },\n        destructive: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }\n      }, \"Disconnect From Xero\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }\n      }, \"Disconnect from Xero. Delete the credentials.\"), __jsx(TextStyle, {\n        variation: \"subdued\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }\n      }, \"Note: This will clear all Xero credentials. Cron will not run until you reconnect again.\")));\n    }\n  }]);\n\n  return DisconnectForm;\n}(Component);\n\nvar Main = /*#__PURE__*/function (_Component6) {\n  _inherits(Main, _Component6);\n\n  var _super6 = _createSuper(Main);\n\n  function Main(props) {\n    var _this8;\n\n    _classCallCheck(this, Main);\n\n    _this8 = _super6.call(this, props);\n    _this8.state = {\n      message: AppConfig.message\n    };\n    _this8.toggleActive = _this8.toggleActive.bind(_assertThisInitialized(_this8));\n    return _this8;\n  }\n\n  _createClass(Main, [{\n    key: \"toggleActive\",\n    value: function toggleActive() {\n      this.setState({\n        message: null\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var message;\n\n      if (this.state.message) {\n        message = __jsx(Toast, {\n          content: this.state.message,\n          onDismiss: this.toggleActive,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 23\n          }\n        });\n      }\n\n      return __jsx(AppProvider, {\n        i18n: translations,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }\n      }, __jsx(Frame, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 17\n        }\n      }, message, __jsx(Page, {\n        title: \"General Settings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }\n      }, __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 23\n        }\n      }, __jsx(Layout.AnnotatedSection, {\n        description: __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 29\n          }\n        }, \"Please choose your account accordingly: \", __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 71\n          }\n        }), \"- Sales Account will be applied to Invoice Line Items' Account\", __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 91\n          }\n        }), \"- Shipping Account will be applied to Shipping as an Invoice Line Item\", __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 99\n          }\n        }), \"- Payments will go to Payment Account on Xero\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 25\n        }\n      }, __jsx(AccountSettingForm, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 29\n        }\n      })))), __jsx(Page, {\n        title: \"Export To Xero\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }\n      }, __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 23\n        }\n      }, __jsx(Layout.AnnotatedSection, {\n        description: __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 29\n          }\n        }, \"- Choose date from and date to and export your data to Xero.\", __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 89\n          }\n        }), \"- Customers will be synced to Xero as: Shopify - \\\"Customer Name\\\" - (\\\"Customer Id\\\")\", __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 111\n          }\n        }), \"- Invoices will be synced to Xero as: Shopify - \\\"Order Id\\\"\", __jsx(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 87\n          }\n        }), \"- Products will be synced to Xero as Xero Items\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 25\n        }\n      }, __jsx(ExportForm, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 29\n        }\n      })))), __jsx(Page, {\n        title: \"History\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }\n      }, __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 23\n        }\n      }, __jsx(Layout.Section, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 27\n        }\n      }, __jsx(HistoryTable, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 29\n        }\n      })))), __jsx(Page, {\n        title: \"Plans\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }\n      }, __jsx(PlanForm, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 25\n        }\n      })), __jsx(Page, {\n        title: \"Disconnect From Xero\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }\n      }, __jsx(DisconnectForm, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport default Main;\nvar wrapper = document.getElementById(\"root\");\nwrapper ? ReactDOM.render(__jsx(Main, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 27\n  }\n}), wrapper) : false;","map":{"version":3,"sources":["/home/thinh/Documents/odoo-13/customaddons/shopify_app/app/pages/index.js"],"names":["Frame","Toast","DataTable","DatePicker","Checkbox","Select","AppProvider","Card","TextField","Button","TextStyle","EmptyState","Form","FormLayout","Layout","Page","React","Component","useState","useCallback","ReactDOM","translations","AppConfig","window","config","console","log","shopify_store","sale_account","AccountSettingForm","props","state","current_sale_account","current_shipping_account","shipping_account","current_payment_account","payment_account","current_auto_sync","auto_sync","sale_account_options","sale_accounts","map","account","label","name","value","code","shipping_account_options","shipping_accounts","payment_account_options","payment_accounts","handleSaleAccountSelectChange","bind","handleShippingAccountSelectChange","handlePaymentAccountSelectChange","handleAutoSyncChange","setState","url","event","location","href","SaveSettingUrl","ExportForm","date","month","Date","getMonth","year","getFullYear","selectedDate","start","end","handleSelectedDates","handleMonthChange","from_date","to_date","$","datepicker","formatDate","SyncToXeroUrl","HistoryTable","logs","orders_synced","store_plan_order_number","showPlanOrderNumber","PlanForm","plans","current_plan_id","store_plan_id","shop_url","plan_id","plan_name","cost","plan","plan_interval_number","plan_order_number","buttunId","plan_cost","textAlign","marginTop","top","showPlanName","showPlanCost","showPlanDescription","showSignUpPlanButton","DisconnectForm","OrganizationName","organisation_name","Main","message","toggleActive","wrapper","document","getElementById","render"],"mappings":"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","sourcesContent":["import {Frame, Toast, DataTable, DatePicker, Checkbox ,Select, AppProvider, Card,TextField, Button, TextStyle, EmptyState, Form, FormLayout, Layout, Page } from '@shopify/polaris';\nimport React, {Component, useState, useCallback} from 'react';\nimport ReactDOM from \"react-dom\";\nimport '@shopify/polaris/dist/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nconst AppConfig = window.config;\nconsole.log(\"window.config.shopify_store.sale_account: \"+ window.config.shopify_store.sale_account)\n\nclass AccountSettingForm extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            current_sale_account: AppConfig.shopify_store.sale_account,\n            current_shipping_account: AppConfig.shopify_store.shipping_account,\n            current_payment_account: AppConfig.shopify_store.payment_account,\n            current_auto_sync: ((AppConfig.shopify_store.auto_sync == 1) ? true : false),\n            sale_account_options: AppConfig.sale_accounts.map((account) =>(\n                {label: account.name, value: account.code}\n            )),\n            shipping_account_options: AppConfig.shipping_accounts.map((account) =>(\n                {label: account.name, value: account.code}\n            )),\n            payment_account_options: AppConfig.payment_accounts.map((account) =>(\n                {label: account.name, value: account.code}\n            )),\n        };\n        this.handleSaleAccountSelectChange = this.handleSaleAccountSelectChange.bind(this);\n        this.handleShippingAccountSelectChange = this.handleShippingAccountSelectChange.bind(this);\n        this.handlePaymentAccountSelectChange = this.handlePaymentAccountSelectChange.bind(this);\n        this.handleAutoSyncChange = this.handleAutoSyncChange.bind(this);\n    };\n\n    handleSaleAccountSelectChange(value){\n        this.setState({current_sale_account: value});\n    };\n    handleShippingAccountSelectChange(value){\n        this.setState({current_shipping_account: value});\n    };\n    handlePaymentAccountSelectChange(value){\n        this.setState({current_payment_account: value});\n    };\n    handleAutoSyncChange(value){\n        this.setState({current_auto_sync: value});\n    };\n\n    SaveSettingUrl(){\n        var current_sale_account = this.state.current_sale_account\n        var current_shipping_account = this.state.current_shipping_account\n        var current_payment_account = this.state.current_payment_account\n        var current_auto_sync = ''\n        if (this.state.current_auto_sync == true){\n            current_auto_sync = 'True'\n        }\n        let url = '/save_settings?sale_account='+current_sale_account+'&shipping_account='+current_shipping_account+'&payment_account='+current_payment_account+'&auto_sync='+current_auto_sync\n        console.log(\"settings: \"+ url)\n        return url\n    }\n\n    render() {\n        return (\n            <Form>\n                <FormLayout>\n                    <Select name=\"sale_account\" label=\"Sales Account\" options={this.state.sale_account_options} onChange={this.handleSaleAccountSelectChange}\n                            value={this.state.current_sale_account}/>\n                    <Select name=\"shipping_account\" label=\"Shipping Account\" options={this.state.shipping_account_options} onChange={this.handleShippingAccountSelectChange}\n                            value={this.state.current_shipping_account}/>\n                    <Select name=\"payment_account\" label='Payment Account (Account with \"Enable payments to this account\" enabled):' options={this.state.payment_account_options} onChange={this.handlePaymentAccountSelectChange}\n                            value={this.state.current_payment_account}/>\n                    <Checkbox name=\"auto_sync\" label= \"Automatically Sync (at midnight everyday)\" checked={this.state.current_auto_sync}\n                    onChange={this.handleAutoSyncChange}/>\n                    <Button onClick={event =>  location.href=this.SaveSettingUrl()} primary>Save Settings</Button>\n                </FormLayout>\n            </Form>\n        )\n    };\n}\n\nclass ExportForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date:  {month: new Date().getMonth(), year: new Date().getFullYear()},\n            selectedDate: {start: new Date(), end: new Date()}\n        };\n        this.handleSelectedDates = this.handleSelectedDates.bind(this);\n        this.handleMonthChange = this.handleMonthChange.bind(this);\n    }\n\n    handleSelectedDates(value){\n        this.setState({selectedDate: value})\n    }\n    handleMonthChange(value){\n        this.setState({date:value})\n    }\n    SyncToXeroUrl(){\n        let from_date = new Date(this.state.selectedDate.start)\n        let to_date = new Date(this.state.selectedDate.end)\n        from_date = $.datepicker.formatDate('mm/dd/yy', from_date);\n        to_date = $.datepicker.formatDate('mm/dd/yy', to_date);\n        let url = '/sync_to_xero?from_date='+from_date+'&to_date='+to_date\n        return url\n\n    }\n\n    render(){\n        return (\n            <Form>\n                <DatePicker\n                    month={this.state.date.month}\n                    year={this.state.date.year}\n                    onChange={this.handleSelectedDates}\n                    onMonthChange={this.handleMonthChange}\n                    selected={this.state.selectedDate}\n                    multiMonth\n                    allowRange\n                    />\n                <br />\n                <Button onClick={event =>  location.href=this.SyncToXeroUrl()} primary>Export Data</Button>\n            </Form>\n        );\n    }\n}\n\nclass HistoryTable extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            logs: AppConfig.logs,\n            orders_synced: AppConfig.shopify_store.orders_synced,\n            store_plan_order_number: AppConfig.shopify_store.store_plan_order_number,\n        };\n    }\n\n    showPlanOrderNumber(){\n        if (this.state.store_plan_order_number > 0){\n            return this.state.store_plan_order_number\n        }\n        else{\n            return 'Unlimited'\n        }\n    }\n\n    render() {\n        return (\n          <Page>\n              <Card>\n                  <Card.Section>\n                      <p>History log of sync history, including automated jobs.</p>\n                      <p>Orders synced this month: {this.state.orders_synced}</p>\n                      <p>Current Orders per plan: {this.showPlanOrderNumber()}</p>\n                  </Card.Section>\n                  <DataTable\n                      columnContentTypes={[\n                          'datetime',\n                          'datetime',\n                          'text',\n                          'text',\n                      ]}\n                      headings={[\n                          'Excution Time',\n                          'Finish Time',\n                          'Status',\n                          'Message',\n                      ]}\n                      rows={this.state.logs}\n                  />\n              </Card>\n      </Page>\n        );\n    }\n}\n\nclass PlanForm extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            plans: AppConfig.plans,\n            current_plan_id: AppConfig.shopify_store.store_plan_id,\n            shop_url: AppConfig.shop_url,\n        };\n    }\n\n    showPlanName(current_plan_id, plan_id, plan_name){\n        if (current_plan_id == plan_id){\n            return plan_name +\"(Current Plan)\"\n        }\n        else{\n            return plan_name\n        }\n    }\n\n    showPlanCost(cost){\n        if (cost > 0){\n            return <p><i>${cost}/month</i></p>\n        }\n        else{\n            return <p><i>Free</i></p>\n        }\n    }\n\n    showPlanDescription(plan){\n        if (plan.plan_name == \"Essential\"){\n            return (\n                <div>\n                    <p>Sync Customers, Products, Orders to Xero</p>\n                    <p>Manually Sync in date range</p>\n                    <p>Automatic Updates every {plan.plan_interval_number} hours</p>\n                    <p>Account Mapping</p>\n                    <p>Synchronization History</p>\n                    <p>{plan.plan_order_number} Orders/month</p>\n                </div>\n            )\n        }\n        else if (plan.plan_name == \"Standard\"){\n            return (\n                <div>\n                    <p>All Essential Features</p>\n                    <p>Automatic Updates every {plan.plan_interval_number} hours</p>\n                    <p>Sync Gift Cards, Refunds to Xero</p>\n                    <p>{plan.plan_order_number} Orders/month</p>\n                </div>\n            )\n        }\n        else if (plan.plan_name == \"Professional\"){\n            return (\n                <div>\n                    <p>All Standard Features</p>\n                    <p>Automatic Updates every {plan.plan_interval_number} hours</p>\n                    <p>Sync Gift Cards, Refunds to Xero</p>\n                    <p>Unlimited Orders per month</p>\n                </div>\n            )\n        }\n    }\n\n    showSignUpPlanButton(plan, current_plan_id){\n        let buttunId = \"signup\"+plan.plan_id\n        let url = '/sign_up/'+plan.plan_id+'?shop_url='+this.state.shop_url\n        if (plan.plan_cost == 0 || current_plan_id == plan.plan_id  ){\n            return (null);\n        }\n        else{\n            return (\n                <div style={{textAlign: 'center', marginTop: '10px'}}>\n                    <Button id={buttunId} onClick={event =>  window.top.location.href=url} primary >Sign Up</Button>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <Layout>\n                {this.state.plans.map((plan)=>(\n                    <Layout.Section oneThird>\n                        <Card sectioned\n                              title={this.showPlanName(this.state.current_plan_id,plan.plan_id, plan.plan_name )} >\n                            {this.showPlanCost(plan.plan_cost)}\n                            <br/>\n                            {this.showPlanDescription(plan)}\n                            {this.showSignUpPlanButton(plan,this.state.current_plan_id)}\n                        </Card>\n                </Layout.Section>\n                ))}\n            </Layout>\n        )\n    }\n}\n\nclass DisconnectForm extends Component{\n    render() {\n        let OrganizationName = AppConfig.organisation_name\n        return (\n            <Card>\n                <Card.Section>\n                    <p>Organization Name: <TextStyle variation=\"strong\">{OrganizationName}</TextStyle></p>\n\n                    <p>Status:\n                        <TextStyle variation=\"positive\">Connected</TextStyle>\n                    </p>\n                    <Button onClick={event =>  location.href='/disconnect'} destructive>Disconnect From Xero</Button>\n                    <p>Disconnect from Xero. Delete the credentials.</p>\n                    <TextStyle variation=\"subdued\">Note: This will clear all Xero credentials. Cron will not run until you reconnect again.</TextStyle>\n                </Card.Section>\n            </Card>\n        )\n    }\n}\n\nclass Main extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: AppConfig.message,\n        };\n        this.toggleActive = this.toggleActive.bind(this);\n    }\n\n    toggleActive(){\n        this.setState({message: null})\n    }\n\n    render() {\n        let message;\n        if (this.state.message){\n            message = <Toast content={this.state.message} onDismiss={this.toggleActive} />\n        }\n        return (\n            <AppProvider i18n={translations}>\n                <Frame>\n                    {message}\n                    <Page title=\"General Settings\">\n                      <Layout>\n                        <Layout.AnnotatedSection\n                        description={\n                            <p>\n                              Please choose your account accordingly: <br />\n                            - Sales Account will be applied to Invoice Line Items' Account<br />\n                            - Shipping Account will be applied to Shipping as an Invoice Line Item<br />\n                            - Payments will go to Payment Account on Xero\n                            </p>\n                        }\n                            >\n                            <AccountSettingForm />\n                        </Layout.AnnotatedSection>\n                      </Layout>\n                    </Page>\n                    <Page title=\"Export To Xero\">\n                      <Layout>\n                        <Layout.AnnotatedSection\n                        description={\n                            <p>\n                            - Choose date from and date to and export your data to Xero.<br />\n                            - Customers will be synced to Xero as: Shopify - \"Customer Name\" - (\"Customer Id\")<br />\n                            - Invoices will be synced to Xero as: Shopify - \"Order Id\"<br />\n                            - Products will be synced to Xero as Xero Items\n                            </p>\n                        }>\n                            <ExportForm />\n                        </Layout.AnnotatedSection>\n                          </Layout>\n                    </Page>\n                    <Page title=\"History\">\n                      <Layout>\n                          <Layout.Section>\n                            <HistoryTable />\n                        </Layout.Section>\n                      </Layout>\n                    </Page>\n                    <Page title=\"Plans\">\n                        <PlanForm />\n                    </Page>\n                    <Page title=\"Disconnect From Xero\">\n                        <DisconnectForm />\n                    </Page>\n                </Frame>\n            </AppProvider>\n        )\n    }\n\n}\n\nexport default Main;\n\nconst wrapper = document.getElementById(\"root\");\nwrapper ? ReactDOM.render(<Main />, wrapper) : false;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}